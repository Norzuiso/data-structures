[
    {
      "title": "Programacion orientada a objetos",
      "code": [
        
        {
          "title": "Clase Empleado de ejemplo",
          "code": 
          "class Empleado {\n        private:\n            char* m_nombre;\n            char* m_departamento;\n            char* m_posicion;\n            long m_salario;    \n        public:\n            void ImprimirInfo();\n            void SetNombre( char* nombre ) { m_nombre = nombre }\n            void SetDepartamento( char * departamento) { m_departamento = departamento }\n            void SetPosicion ( char* posicion ) { m_posicion = posicion }\n            void SetSalario ( long salario ) { m_salario = salario }\n            const char* GetNombre( ){ return m_nombre }\n            const char* GetDepartamento( ){ return m_departamento }\n            const char* GetPosicion( ){ return m_posicion }\n           const char* GetSalario( ){ return m_salario }\n    };"
        }
      ],
        
      "sources": "https://desarrolloweb.com/articulos/499.php",
      "inPutData": {
        "images":[
          "a",
          "b"
        ]
      },
      "outPutData": {
        "images":[
          "a",
          "b"
        ]
      },
      "data":[
        {
          "subtitle":"Clase",
          "body": "Una clase en programacion la podemos ver como una plantilla que nos sirve para representar un modelo predefinido de datos. \n          No obstante, podemos encontrar que una de estas plantillas tambien puede conformarse por acciones o mejor conocidas como metodos, los cuales nos ayuda a tener acciones en determinadas clases.",
          "images": []
        },
        {
          "subtitle":"Atributos",
          "body": "Los atributos son las propiedades que tendran nuestra plantilla y hara referencia a un valor en concreto. Esta propiedad debe de tener un nombre y un tipo de dato.\n          Ademas es importante saber que cada lenguaje de programacion tiene diferentes reglas para nombrar variables.",
          "images": []
        }, 
        {
          "subtitle":"Modificador de acceso de clases",
          "body": "En C++ encontralos los siguientes 3:",
          "images": []
        }, 
        {
          "subtitle":"Public",
          "body": " Este modificador nos ayuda a tener acceso desde cualquier parte del proyecto ",
          "images": []
        }, 
        {
          "subtitle":"Private",
          "body": "En el que solo se tendra acceso en la clase y no en clases hijo.",
          "images": []
        }, 
        {
          "subtitle":"Protected",
          "body": "Este caso es similar al provado pero se podra tener acceso desde variables hijas.",
          "images": []
        }, 
        {
          "subtitle":"Metodos",
          "body": "Como anteriormente se menciono nuestras plantillas(clases), pueden contener metodos que realizaran un metodo concreto.",
          "images": []
        }, 
        {
          "subtitle":"Objeto",
          "body": "El resultado de instanciar una clase es una variable, la cual tendra las propiedades y metodos de nuestra plantilla. Para mayor contexto, un objeto seria el resultado de usar nuestra plantilla en una variable la cual podremos trabajar en nuestro proyecto.",
          "images": []
        }, 
        {
          "subtitle":"Instancia",
          "body": "La instancia es complicada de explicar pero en pocas palabras es el proceso por el que tiene que pasar una clase para crear un objeto de una clase es lo que podemos nombrar como instanciar.",
          "images": []
        }
      ]
    }
  ]