[
    {
      "title": "Busqueda",
      "code": "int binarySearch(int arr[], int l, int r, int x)\n      {\n          if (r >= l) {\n              int mid = l + (r - l) / 2;\n       \n              // If the element is present at the middle\n              // itself\n              if (arr[mid] == x)\n                  return mid;\n       \n              // If element is smaller than mid, then\n              // it can only be present in left subarray\n              if (arr[mid] > x)\n                  return binarySearch(arr, l, mid - 1, x);\n                     // Else the element can only be present\n              // in right subarray\n              return binarySearch(arr, mid + 1, r, x);\n          }\n       \n          // We reach here when element is not\n          // present in array\n          return -1;\n      }",
      "sources": "https://uneginginf05.es.tl/M-e2-todo-de-Busqueda-Secuencial-y-Binaria.htm",
      "inPutData": {
        "images":[
          "a",
          "b"
        ]
      },
      "outPutData": {
        "images":[
          "a",
          "b"
        ]
      },
      "data":[
        {
          "subtitle":"Busqueda binaria",
          "body": "La búsqueda binaria es el método, donde si el arreglo o vector esta bien ordenado, se reduce sucesivamente la operación eliminando repetidas veces la mitad de la lista restante.\n          El proceso comienza comparando el elemento central del arreglo con el elemento buscado. Si ambos coinciden finaliza la búsqueda. Si no ocurre así, el elemento buscado será mayor o menor en sentido estricto que el elemento central del arreglo. Si el elemento buscado es mayor se procede a hacer búsqueda binaria en el subarray superior, si el elemento buscado es menor que el contenido de la casilla central, se debe cambiar el segmento a considerar al segmento que está a la izquierda de tal sitio central.\n",
          "images": []
        }
      ]
    }
  ]
  